{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function signingPolicy(authenticationProvider) {\n  return {\n    create: function (nextPolicy, options) {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    }\n  };\n}\nvar SigningPolicy = /** @class */function (_super) {\n  __extends(SigningPolicy, _super);\n  function SigningPolicy(nextPolicy, options, authenticationProvider) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n    _this.authenticationProvider = authenticationProvider;\n    return _this;\n  }\n  SigningPolicy.prototype.signRequest = function (request) {\n    return this.authenticationProvider.signRequest(request);\n  };\n  SigningPolicy.prototype.sendRequest = function (request) {\n    var _this = this;\n    return this.signRequest(request).then(function (nextRequest) {\n      return _this._nextPolicy.sendRequest(nextRequest);\n    });\n  };\n  return SigningPolicy;\n}(BaseRequestPolicy);\nexport { SigningPolicy };","map":{"version":3,"mappings":"AAAA;AACA;;AAKA,SACEA,iBAAiB,QAIZ,iBAAiB;AAExB,OAAM,SAAUC,aAAa,CAC3BC,sBAAgD;EAEhD,OAAO;IACLC,MAAM,EAAE,UAACC,UAAyB,EAAEC,OAAiC;MACnE,OAAO,IAAIC,aAAa,CAACF,UAAU,EAAEC,OAAO,EAAEH,sBAAsB,CAAC;IACvE;GACD;AACH;AAEA;EAAmCK;EACjC,uBACEH,UAAyB,EACzBC,OAAiC,EAC1BH,sBAAgD;IAHzD,YAKEM,kBAAMJ,UAAU,EAAEC,OAAO,CAAC;IAFnBI,4BAAsB,GAAtBP,sBAAsB;;EAG/B;EAEAI,mCAAW,GAAX,UAAYI,OAAwB;IAClC,OAAO,IAAI,CAACR,sBAAsB,CAACS,WAAW,CAACD,OAAO,CAAC;EACzD,CAAC;EAEMJ,mCAAW,GAAlB,UAAmBI,OAAwB;IAA3C;IACE,OAAO,IAAI,CAACC,WAAW,CAACD,OAAO,CAAC,CAACE,IAAI,CAAC,UAACC,WAAW;MAChD,YAAI,CAACC,WAAW,CAACC,WAAW,CAACF,WAAW,CAAC;IAAzC,CAAyC,CAC1C;EACH,CAAC;EACH,oBAAC;AAAD,CAAC,CAlBkCb,iBAAiB","names":["BaseRequestPolicy","signingPolicy","authenticationProvider","create","nextPolicy","options","SigningPolicy","__extends","_super","_this","request","signRequest","then","nextRequest","_nextPolicy","sendRequest"],"sources":["C:\\Users\\willi\\Downloads\\azure-copa\\node_modules\\@azure\\ms-rest-js\\lib\\policies\\signingPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { ServiceClientCredentials } from \"../credentials/serviceClientCredentials\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptionsLike,\n} from \"./requestPolicy\";\n\nexport function signingPolicy(\n  authenticationProvider: ServiceClientCredentials\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike) => {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    },\n  };\n}\n\nexport class SigningPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptionsLike,\n    public authenticationProvider: ServiceClientCredentials\n  ) {\n    super(nextPolicy, options);\n  }\n\n  signRequest(request: WebResourceLike): Promise<WebResourceLike> {\n    return this.authenticationProvider.signRequest(request);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this.signRequest(request).then((nextRequest) =>\n      this._nextPolicy.sendRequest(nextRequest)\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}