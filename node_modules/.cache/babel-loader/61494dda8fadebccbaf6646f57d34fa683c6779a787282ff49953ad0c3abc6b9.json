{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function logPolicy(logger) {\n  if (logger === void 0) {\n    logger = console.log;\n  }\n  return {\n    create: function (nextPolicy, options) {\n      return new LogPolicy(nextPolicy, options, logger);\n    }\n  };\n}\nvar LogPolicy = /** @class */function (_super) {\n  __extends(LogPolicy, _super);\n  function LogPolicy(nextPolicy, options, logger) {\n    if (logger === void 0) {\n      logger = console.log;\n    }\n    var _this = _super.call(this, nextPolicy, options) || this;\n    _this.logger = logger;\n    return _this;\n  }\n  LogPolicy.prototype.sendRequest = function (request) {\n    var _this = this;\n    return this._nextPolicy.sendRequest(request).then(function (response) {\n      return logResponse(_this, response);\n    });\n  };\n  return LogPolicy;\n}(BaseRequestPolicy);\nexport { LogPolicy };\nfunction logResponse(policy, response) {\n  policy.logger(\">> Request: \" + JSON.stringify(response.request, undefined, 2));\n  policy.logger(\">> Response status code: \" + response.status);\n  var responseBody = response.bodyAsText;\n  policy.logger(\">> Body: \" + responseBody);\n  return Promise.resolve(response);\n}","map":{"version":3,"mappings":"AAAA;AACA;;AAIA,SACEA,iBAAiB,QAIZ,iBAAiB;AAExB,OAAM,SAAUC,SAAS,CAACC,MAAyB;EAAzB;IAAAA,SAAcC,OAAO,CAACC,GAAG;EAAA;EACjD,OAAO;IACLC,MAAM,EAAE,UAACC,UAAyB,EAAEC,OAAiC;MACnE,OAAO,IAAIC,SAAS,CAACF,UAAU,EAAEC,OAAO,EAAEL,MAAM,CAAC;IACnD;GACD;AACH;AAEA;EAA+BO;EAG7B,mBACEH,UAAyB,EACzBC,OAAiC,EACjCL,MAAyB;IAAzB;MAAAA,SAAcC,OAAO,CAACC,GAAG;IAAA;IAH3B,YAKEM,kBAAMJ,UAAU,EAAEC,OAAO,CAAC;IAC1BI,KAAI,CAACT,MAAM,GAAGA,MAAM;;EACtB;EAEOM,+BAAW,GAAlB,UAAmBI,OAAwB;IAA3C;IACE,OAAO,IAAI,CAACC,WAAW,CAACC,WAAW,CAACF,OAAO,CAAC,CAACG,IAAI,CAAC,UAACC,QAAQ;MAAK,kBAAW,CAACL,KAAI,EAAEK,QAAQ,CAAC;IAA3B,CAA2B,CAAC;EAC9F,CAAC;EACH,gBAAC;AAAD,CAAC,CAf8BhB,iBAAiB;;AAiBhD,SAASiB,WAAW,CAClBC,MAAiB,EACjBF,QAA+B;EAE/BE,MAAM,CAAChB,MAAM,CAAC,iBAAeiB,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAACJ,OAAO,EAAES,SAAS,EAAE,CAAC,CAAG,CAAC;EAC9EH,MAAM,CAAChB,MAAM,CAAC,8BAA4Bc,QAAQ,CAACM,MAAQ,CAAC;EAC5D,IAAMC,YAAY,GAAGP,QAAQ,CAACQ,UAAU;EACxCN,MAAM,CAAChB,MAAM,CAAC,cAAYqB,YAAc,CAAC;EACzC,OAAOE,OAAO,CAACC,OAAO,CAACV,QAAQ,CAAC;AAClC","names":["BaseRequestPolicy","logPolicy","logger","console","log","create","nextPolicy","options","LogPolicy","__extends","_super","_this","request","_nextPolicy","sendRequest","then","response","logResponse","policy","JSON","stringify","undefined","status","responseBody","bodyAsText","Promise","resolve"],"sources":["C:\\Users\\willi\\Downloads\\azure-copa\\node_modules\\@azure\\ms-rest-js\\lib\\policies\\logPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike,\n} from \"./requestPolicy\";\n\nexport function logPolicy(logger: any = console.log): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike) => {\n      return new LogPolicy(nextPolicy, options, logger);\n    },\n  };\n}\n\nexport class LogPolicy extends BaseRequestPolicy {\n  logger?: any;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptionsLike,\n    logger: any = console.log\n  ) {\n    super(nextPolicy, options);\n    this.logger = logger;\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(request).then((response) => logResponse(this, response));\n  }\n}\n\nfunction logResponse(\n  policy: LogPolicy,\n  response: HttpOperationResponse\n): Promise<HttpOperationResponse> {\n  policy.logger(`>> Request: ${JSON.stringify(response.request, undefined, 2)}`);\n  policy.logger(`>> Response status code: ${response.status}`);\n  const responseBody = response.bodyAsText;\n  policy.logger(`>> Body: ${responseBody}`);\n  return Promise.resolve(response);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}