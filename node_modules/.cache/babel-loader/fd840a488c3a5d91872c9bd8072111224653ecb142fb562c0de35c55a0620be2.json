{"ast":null,"code":"// Azure SDK client libraries\nimport { ComputerVisionClient } from '@azure/cognitiveservices-computervision';\nimport { ApiKeyCredentials } from '@azure/ms-rest-js';\n\n// List of sample images to use in demo\n// import RandomImageUrl from './DefaultImages';\n\n// Authentication requirements\n//const key = process.env.REACT_APP_AZURE_COMPUTER_VISION_KEY;\n//const endpoint = process.env.REACT_APP_AZURE_COMPUTER_VISION_ENDPOINT;\n\nconst key = \"70f317e593d24b5bb3ec432acddb1e60\";\nconst endpoint = \"https://iaifmachadowilliansilvestre.cognitiveservices.azure.com/\";\nconsole.log(`key = ${key}`);\nconsole.log(`endpoint = ${endpoint}`);\n\n// Cognitive service features\nconst visualFeatures = [\"ImageType\", \"Faces\", \"Adult\", \"Categories\", \"Color\", \"Tags\", \"Description\", \"Objects\", \"Brands\"];\nexport const isConfigured = () => {\n  const result = key && endpoint && key.length > 0 && endpoint.length > 0 ? true : false;\n  console.log(`key = ${key}`);\n  console.log(`endpoint = ${endpoint}`);\n  console.log(`ComputerVision isConfigured = ${result}`);\n  return result;\n};\n\n// Analyze Image from URL\nexport const computerVision = async url => {\n  // authenticate to Azure service\n  const computerVisionClient = new ComputerVisionClient(new ApiKeyCredentials({\n    inHeader: {\n      'Ocp-Apim-Subscription-Key': key\n    }\n  }), endpoint);\n\n  // get image URL - entered in form or random from Default Images\n  const urlToAnalyze = url; // || RandomImageUrl()\n\n  // analyze image\n  const analysis = await computerVisionClient.analyzeImage(urlToAnalyze, {\n    visualFeatures,\n    language: \"pt\"\n  });\n\n  // all information about image\n  return {\n    \"URL\": urlToAnalyze,\n    ...analysis\n  };\n};","map":{"version":3,"names":["ComputerVisionClient","ApiKeyCredentials","key","endpoint","console","log","visualFeatures","isConfigured","result","length","computerVision","url","computerVisionClient","inHeader","urlToAnalyze","analysis","analyzeImage","language"],"sources":["C:/Users/willi/Downloads/azure-copa/src/components/ComputerVision/azure-cognitiveservices-computervision.js"],"sourcesContent":["// Azure SDK client libraries\nimport { ComputerVisionClient } from '@azure/cognitiveservices-computervision';\nimport { ApiKeyCredentials } from '@azure/ms-rest-js';\n\n// List of sample images to use in demo\n// import RandomImageUrl from './DefaultImages';\n\n// Authentication requirements\n//const key = process.env.REACT_APP_AZURE_COMPUTER_VISION_KEY;\n//const endpoint = process.env.REACT_APP_AZURE_COMPUTER_VISION_ENDPOINT;\n\nconst key = \"70f317e593d24b5bb3ec432acddb1e60\";\nconst endpoint = \"https://iaifmachadowilliansilvestre.cognitiveservices.azure.com/\";\n\nconsole.log(`key = ${key}`)\nconsole.log(`endpoint = ${endpoint}`)\n\n// Cognitive service features\nconst visualFeatures = [\n    \"ImageType\",\n    \"Faces\",\n    \"Adult\",\n    \"Categories\",\n    \"Color\",\n    \"Tags\",\n    \"Description\",\n    \"Objects\",\n    \"Brands\"\n];\n\nexport const isConfigured = () => {\n    const result = (key && endpoint && (key.length > 0) && (endpoint.length > 0)) ? true : false;\n    console.log(`key = ${key}`)\n    console.log(`endpoint = ${endpoint}`)\n    console.log(`ComputerVision isConfigured = ${result}`)\n    return result;\n}\n\n// Analyze Image from URL\nexport const computerVision = async (url) => {\n\n    // authenticate to Azure service\n    const computerVisionClient = new ComputerVisionClient(\n        new ApiKeyCredentials({ inHeader: { 'Ocp-Apim-Subscription-Key': key } }), endpoint);\n\n    // get image URL - entered in form or random from Default Images\n    const urlToAnalyze = url; // || RandomImageUrl()\n    \n    // analyze image\n    const analysis = await computerVisionClient.analyzeImage(urlToAnalyze, { visualFeatures,language:\"pt\" });\n\n    // all information about image\n    return { \"URL\": urlToAnalyze, ...analysis};\n}\n"],"mappings":"AAAA;AACA,SAASA,oBAAoB,QAAQ,yCAAyC;AAC9E,SAASC,iBAAiB,QAAQ,mBAAmB;;AAErD;AACA;;AAEA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,kCAAkC;AAC9C,MAAMC,QAAQ,GAAG,kEAAkE;AAEnFC,OAAO,CAACC,GAAG,CAAE,SAAQH,GAAI,EAAC,CAAC;AAC3BE,OAAO,CAACC,GAAG,CAAE,cAAaF,QAAS,EAAC,CAAC;;AAErC;AACA,MAAMG,cAAc,GAAG,CACnB,WAAW,EACX,OAAO,EACP,OAAO,EACP,YAAY,EACZ,OAAO,EACP,MAAM,EACN,aAAa,EACb,SAAS,EACT,QAAQ,CACX;AAED,OAAO,MAAMC,YAAY,GAAG,MAAM;EAC9B,MAAMC,MAAM,GAAIN,GAAG,IAAIC,QAAQ,IAAKD,GAAG,CAACO,MAAM,GAAG,CAAE,IAAKN,QAAQ,CAACM,MAAM,GAAG,CAAE,GAAI,IAAI,GAAG,KAAK;EAC5FL,OAAO,CAACC,GAAG,CAAE,SAAQH,GAAI,EAAC,CAAC;EAC3BE,OAAO,CAACC,GAAG,CAAE,cAAaF,QAAS,EAAC,CAAC;EACrCC,OAAO,CAACC,GAAG,CAAE,iCAAgCG,MAAO,EAAC,CAAC;EACtD,OAAOA,MAAM;AACjB,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOC,GAAG,IAAK;EAEzC;EACA,MAAMC,oBAAoB,GAAG,IAAIZ,oBAAoB,CACjD,IAAIC,iBAAiB,CAAC;IAAEY,QAAQ,EAAE;MAAE,2BAA2B,EAAEX;IAAI;EAAE,CAAC,CAAC,EAAEC,QAAQ,CAAC;;EAExF;EACA,MAAMW,YAAY,GAAGH,GAAG,CAAC,CAAC;;EAE1B;EACA,MAAMI,QAAQ,GAAG,MAAMH,oBAAoB,CAACI,YAAY,CAACF,YAAY,EAAE;IAAER,cAAc;IAACW,QAAQ,EAAC;EAAK,CAAC,CAAC;;EAExG;EACA,OAAO;IAAE,KAAK,EAAEH,YAAY;IAAE,GAAGC;EAAQ,CAAC;AAC9C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}