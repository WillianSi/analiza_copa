{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport { __extends } from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function generateClientRequestIdPolicy(requestIdHeaderName) {\n  if (requestIdHeaderName === void 0) {\n    requestIdHeaderName = \"x-ms-client-request-id\";\n  }\n  return {\n    create: function (nextPolicy, options) {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\nvar GenerateClientRequestIdPolicy = /** @class */function (_super) {\n  __extends(GenerateClientRequestIdPolicy, _super);\n  function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n    _this._requestIdHeaderName = _requestIdHeaderName;\n    return _this;\n  }\n  GenerateClientRequestIdPolicy.prototype.sendRequest = function (request) {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, utils.generateUuid());\n    }\n    return this._nextPolicy.sendRequest(request);\n  };\n  return GenerateClientRequestIdPolicy;\n}(BaseRequestPolicy);\nexport { GenerateClientRequestIdPolicy };","map":{"version":3,"mappings":"AAAA;AACA;;AAGA,OAAO,KAAKA,KAAK,MAAM,eAAe;AAEtC,SACEC,iBAAiB,QAIZ,iBAAiB;AAExB,OAAM,SAAUC,6BAA6B,CAC3CC,mBAA8C;EAA9C;IAAAA,8CAA8C;EAAA;EAE9C,OAAO;IACLC,MAAM,EAAE,UAACC,UAAyB,EAAEC,OAAiC;MACnE,OAAO,IAAIC,6BAA6B,CAACF,UAAU,EAAEC,OAAO,EAAEH,mBAAmB,CAAC;IACpF;GACD;AACH;AAEA;EAAmDK;EACjD,uCACEH,UAAyB,EACzBC,OAAiC,EACzBG,oBAA4B;IAHtC,YAKEC,kBAAML,UAAU,EAAEC,OAAO,CAAC;IAFlBK,0BAAoB,GAApBF,oBAAoB;;EAG9B;EAEOF,mDAAW,GAAlB,UAAmBK,OAAwB;IACzC,IAAI,CAACA,OAAO,CAACC,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACL,oBAAoB,CAAC,EAAE;MACxDG,OAAO,CAACC,OAAO,CAACE,GAAG,CAAC,IAAI,CAACN,oBAAoB,EAAET,KAAK,CAACgB,YAAY,EAAE,CAAC;;IAEtE,OAAO,IAAI,CAACC,WAAW,CAACC,WAAW,CAACN,OAAO,CAAC;EAC9C,CAAC;EACH,oCAAC;AAAD,CAAC,CAfkDX,iBAAiB","names":["utils","BaseRequestPolicy","generateClientRequestIdPolicy","requestIdHeaderName","create","nextPolicy","options","GenerateClientRequestIdPolicy","__extends","_requestIdHeaderName","_super","_this","request","headers","contains","set","generateUuid","_nextPolicy","sendRequest"],"sources":["C:\\Users\\willi\\Downloads\\azure-main\\node_modules\\@azure\\ms-rest-js\\lib\\policies\\generateClientRequestIdPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptionsLike,\n} from \"./requestPolicy\";\n\nexport function generateClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\"\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    },\n  };\n}\n\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptionsLike,\n    private _requestIdHeaderName: string\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, utils.generateUuid());\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}